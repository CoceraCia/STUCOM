/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package alumnos;

import alumnos.RegistrosAlumnos;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author migue
 */
public class Home extends javax.swing.JFrame {

    private DefaultTableModel model;

    /**
     * Creates new form Home
     */
    public Home() {
        model = new DefaultTableModel(modifyArrayToObject(RegistrosAlumnos.getRegister()), new String[]{"Nombre", "Apellido", "Edad", "Curso", "DNI"});
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(this.model);
        saveButton = new javax.swing.JButton();
        addStudentButton = new javax.swing.JButton();
        deleteStudentButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTRO ALUMNOS");

        jScrollPane1.setViewportView(jTable1);

        saveButton.setText("Guardar");
        saveButton.setToolTipText("");
        saveButton.setActionCommand("save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        addStudentButton.setText("Añadir Fila");
        addStudentButton.setActionCommand("añadirFila");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        deleteStudentButton.setText("Eliminar Fila");
        deleteStudentButton.setActionCommand("deleteStudent");
        deleteStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStudentButtonActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveButton)
                        .addComponent(deleteStudentButton))
                    .addComponent(addStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Object[][] modifyArrayToObject(ArrayList<Alumno> reg) {
        ArrayList<Object[]> obj = new ArrayList<>();
        for (Alumno alu : reg) {
            obj.add(new Object[]{alu.getNombre(), alu.getApellido(), alu.getEdad(), alu.getCurso(), alu.getDni()});
        }
        return obj.toArray(new Object[0][]);
    }
    
    private boolean checkTableIsFilled(){
        for (int i = 0; i < this.model.getRowCount(); i++) { // row
                    for (int j = 0; j < this.model.getColumnCount(); j++) { // column
                            if(this.model.getValueAt(i, j).equals("")){
                                return false;
                            }
                        }
                    }
        return true;
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<Alumno> register = RegistrosAlumnos.getRegister();
        register.clear();
        String nombre = "null", apellido = "null", curso = "null", dni = "null";
        int edad = 0;
        // In case there are no content but the user still wants to clear the register
        if (this.model.getRowCount() == 0) {
            RegistrosAlumnos.overwriteFile();
            jLabel2.setForeground(new java.awt.Color(0, 255, 0));
            jLabel2.setText("SAVED");
        } else {
            if(checkTableIsFilled()){
                try {
                jLabel2.setText("");
                for (int i = 0; i < this.model.getRowCount(); i++) { // row
                    for (int j = 0; j < this.model.getColumnCount(); j++) { // column
                        switch (j) { // In case of the position of the column we are going to get a value
                            case 0 ->
                                nombre = String.valueOf(this.model.getValueAt(i, j));
                            case 1 ->
                                apellido = String.valueOf(this.model.getValueAt(i, j));
                            case 2 ->
                                edad = Integer.parseInt(String.valueOf(this.model.getValueAt(i, j)));
                            case 3 ->
                                curso = String.valueOf(this.model.getValueAt(i, j));
                            case 4 ->
                                dni = String.valueOf(this.model.getValueAt(i, j));
                        }
                    }
                    // Once we already got the values, we just add it to our ArrayList
                    register.add(new Alumno(nombre, apellido, edad, curso, dni));
                }
                RegistrosAlumnos.overwriteFile();
                jLabel2.setForeground(new java.awt.Color(0, 255, 0));
                jLabel2.setText("SAVED");
            } catch (NumberFormatException e) {
                jLabel2.setForeground(new java.awt.Color(255, 0, 0));
                jLabel2.setText("INCORRECT VALUE ON EDAD");
            }
            } else {
                jLabel2.setForeground(new java.awt.Color(255, 0, 0));
                jLabel2.setText("TABLE ISN'T FULLFILLED");
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStudentButtonActionPerformed
        // TODO add your handling code here:
        try {
            jLabel2.setText("");
            int row = jTable1.getSelectedRow();
            this.model.removeRow(row);
        } catch (Exception e) {
            jLabel2.setForeground(new java.awt.Color(255, 0, 0));
            jLabel2.setText("No row selected");
        }
    }//GEN-LAST:event_deleteStudentButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // TODO add your handling code here:
        this.model.addRow(new Object[]{"", "", null, "", ""});
    }//GEN-LAST:event_addStudentButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudentButton;
    private javax.swing.JButton deleteStudentButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
